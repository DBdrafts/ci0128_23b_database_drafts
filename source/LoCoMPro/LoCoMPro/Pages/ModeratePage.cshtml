@page
@model LoCoMPro.Pages.ModeratePageModel
@{
    ViewData["Title"] = "Registros reportados";
    Layout = "_Layout";
    ViewBag.ShowSearchBar = true;
    ViewBag.ShowLogoLink = true;
    char s = (char)31; // ASCII Control Unit Separator
}
@using Microsoft.AspNetCore.Identity
@using LoCoMPro.Data;
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager


<head>
    <link rel="stylesheet" href="~/css/ModeratePage.css" />
    <script src="~/js/interactionsPopUp.js"></script>
    <script src="~/js/productListButton.js"></script>
    <link rel="stylesheet" href="~/css/RateRegister.css" />
    <link rel="stylesheet" href="~/ico/font-awesome-4.7.0/css/font-awesome.css">
</head>

<div class="reported-page-body">
    <div id="feedbackMessage" class="feedback-message"></div>
    <div class="reports-section" id="reports-results">
        <!-- Search section title -->
        <div class="results-cont-msg" span id="results-count"></div>

        <!-- Search section header -->
        <nav>
            <ul class="containerListReportColumns">
                <li id="product-col">
                    <div class="textComment">Producto</div>
                </li>
                <li id="contributor-col">
                    <div class="textComment">Contribuidor</div>
                </li>
                <li id="reporter-col">
                    <div class="textComment">Reportado por</div>
                </li>
                <li id="date-col">
                    <!-- Button to sort by the date -->
                    @{
                        ViewBag.SortTipe = "#register-date";
                    }
                    @await Html.PartialAsync("_OrderButton", "Fecha de reporte")
                </li>
            </ul>
        </nav>

        <ul class="reports-section">
            <!-- Put in all results -->
            @for (int reportNum = 0; reportNum < Model.Reports.Count; reportNum++)
            {
                var report = Model.Reports[reportNum];

                var register = Model.Registers.FirstOrDefault(register =>
                register.ContributorId == report.ContributorId &&
                register.ProductName == report.ProductName &&
                register.StoreName == report.StoreName &&
                register.CantonName == report.CantonName &&
                register.ProvinciaName == report.ProvinceName &&
                register.SubmitionDate == report.SubmitionDate
                );

                string contributorName = Model.Users
                    .First(u => u.Id == report.ContributorId).ToString();

                string reporterName = Model.Users
                    .First(u => u.Id == report.ReporterId).ToString();

                var reportData = $"{report.ReporterId}{s}{report.ContributorId}" +
                    $"{s}{report.ProductName}{s}{report.StoreName}" +
                    $"{s}{report.SubmitionDate.ToShortDateString()}{s}{report.CantonName}" +
                    $"{s}{report.ProvinceName}{s}{report.ReportDate}" +
                    $"{s}{report.ReportState}{s}{reporterName}" +
                    $"{s}{contributorName}{s}{register.Price}";
                
                // images in registers
                int imagecount = 0;
                var registerImages = "";
                if (register.Images != null && register.Images.Any())
                { // In case registers has images
                    foreach (var image in register.Images)
                    { // For each image in register
                        if (image.ImageData != null)
                        {
                            // Cover the bytes of images to string
                            registerImages += $"{s}ImageData{imagecount}: {Convert.ToBase64String(image.ImageData)}";
                            imagecount++;
                        }
                    }
                }

                <!-- A result block -->
                <li class="result-block register-block-pagination" id="report-item-@reportNum">
                    <!-- Route and data for each result -->
                    <a>
                        <span id="register-product-name" value="@report.ProductName">
                            @report.ProductName
                        </span>
                        <!-- This can be use with the geolocalitation -->
                        <span id="register-reporter" value="@reporterName">
                            @reporterName
                        </span>
                        <span id="register-user" value="@contributorName">
                            @contributorName
                        </span>
                        <span class="short-column" id="register-date" value="@report.ReportDate">
                            @report.ReportDate.ToShortDateString()
                        </span>

                        <div class="text-center align">
                            <button class="open-interactions-button" report-data="@reportData" report-number="@reportNum"
                                images-register-id="@registerImages" onclick="openInteractionsPopupMod(this)">
                                <img src="~/img/MoreIcon.svg" alt="Más opciones">
                            </button>
                        </div>
                    </a>
                </li>
            }
        </ul>

        <!-- Code for interactive pop up -->
        <div class="interactive-popup-section">
            <div class="interactions-popup">
                <div class="interactions-popup-content">
                    <p><b>Aporte de:</b> <span id="popup-contributorName"></span></p>
                    <p><b>Fecha de Contribución:</b> <span id="popup-submitionDate"></span></p>
                    <p><b>Nombre de Producto:</b> <span id="popup-prodName"></span></p>
                    <p><b>Tienda:</b> <span id="popup-store"></span></p>
                    <p><b>Precio:</b> <span id="popup-price"></span></p>
                    <p><b>Reportado por:</b> <span id="popup-reporterName"></span></p>
                    

                    <div class="carousel-section-pop-up">
                        <div class="img-carousel-pop-up">
                        </div>
                    </div>

                    <div class="buttons-container">
                        <button id ="acceptReport" onclick="acceptReport()">Aceptar Reporte</button>
                        <button class="interactions-close-button" onclick="closeInteractionsPopup()">Cerrar</button>
                        <button id="rejectReport" onclick="rejectReport()" style="visibility: hidden;">Rechazar</button>
                        @if (SignInManager.IsSignedIn(User))
                        {
                            <script>
                                document.getElementById("rejectReport").style.visibility = "visible";
                                document.getElementById("acceptReport").style.visibility = "visible";
                            </script>
                        }

                    </div>
                </div>
            </div>
        </div>
        <div class="product-pagination">
            <!-- Pagination section -->
            @await Html.PartialAsync("_Pagination")
        </div>
    </div>
    <script src="~/js/ProductPage/imageChanger.js"></script>
    <script src="~/js/feedbackMessage.js"></script>
    <script src="~/js/pagination.js"></script>
</div>
<!-- Pagination section -->
