@page "~/ProductPage/{pageIndex:int}"
@model LoCoMPro.Pages.ProductPageModel
@{
    ViewData["Title"] = "Visialización Producto";
    Layout = "_Layout";
    ViewBag.ShowSearchBar = true;
    ViewBag.ShowLogoLink = true;
}

<head>
    <link rel="stylesheet" href="~/css/ProductPage.css" />
    <script src="~/js/interactionsPopUp.js"></script>
</head>

<div class="product-page">
    <!-- Name of product Search -->
    <div class="titleProduct">
        @Model.SearchProductName
    </div>

    <!-- Section for columns of specifications from Search product -->
    <div class="product-page-section">
        @{ // select the first matches
            var firstNonNullProduct = Model.Product.FirstOrDefault(r => r.Name != null);
            var firstNonNullStore = Model.Store.FirstOrDefault(r => r.Name != null);
            System.Globalization.CultureInfo culture = new System.Globalization.CultureInfo("es-CR"); // Costa Rica datetime format
        }
        <!-- brand column -->
        <div class="column">
            <h2>Marca</h2>
            @{ // Get the name of the product brand
                if (firstNonNullProduct != null)
                {
                    <p>@firstNonNullProduct.Brand</p>
                }
            }
        </div>

        <!-- model column -->
        <div class="column">
            <h2>Modelo</h2>
            @{ // Get the name of the product model
                if (firstNonNullProduct != null)
                {
                    <p>@firstNonNullProduct.Model</p>
                }
            }
            </div>

        <!-- establishment column -->
        <div class="column">
            <h2>Establecimiento</h2>
            @{ // Get the name of the store
                if (firstNonNullStore != null)
                {
                    <p>@firstNonNullStore.Name</p>
                }
            }
        </div>

        <!-- cantón column -->
        <div class="column">
            <h2>Cantón</h2>
            @{ // Get the name of the Canton Location
                if (firstNonNullStore != null)
                {
                    <p>@firstNonNullStore.CantonName</p>
                }
            }
        </div>

        <!-- province column -->
        <div class="column">
            <h2>Provincia</h2>
            @{ // Get the name of the Province Location
                if (firstNonNullStore != null)
                {
                    <p>@firstNonNullStore.ProvinciaName</p>
                }
            }
        </div>
        <!-- price column -->
        <div class="column">
            <h2>Precio Prom.</h2>
            <p>₡ @Model.AvgPrice.ToString("N0")</p>
        </div>
    </div>
    
    <!-- Horizontal separating line -->
    <hr class="style-four">

    <!-- Code for register list in the page -->
    <!-- Name of product Search -->
    <div class="titleListRegister">
        Lista de registros
    </div>

    <!-- Container for column options -->
   <nav>
        <ul class="containerListRegistercolumns">
            <li>
                @{ViewBag.SortTipe = "#register-date";}
                @await Html.PartialAsync("_OrderButton", "Fecha")
            </li>
            <li>
                @{ViewBag.SortTipe = "#register-price";}
                @await Html.PartialAsync("_OrderButton", "Precio")
            </li>
            <li>
                <div class="textComment">Comentarios</div>
            </li>

		</ul>
	</nav>

    <ul class="register-section">
        <!-- Individual registers -->
        @foreach (var register in Model.Registers)
        {
            <!-- Search result section -->
            <!-- Individual registers -->
            char s = (char)31; // ASCII Control Unit Separator
            var user = Model.Users.FirstOrDefault(u => u.Id == register.ContributorId)?.UserName;
            var registerKeys = $"{register.SubmitionDate}{s}{register.ContributorId}{s}{register.ProductName}" +
            $"{s}{register.StoreName}{s}{register.Price.ToString("N0")}{s}{register.SubmitionDate.ToString("d", culture)}" +
            $"{s}{user}{s}{register.Comment}";

            <li class="register-block align register-block-pagination">
                <a>
                    <span id="register-date" value="@register.SubmitionDate.Date">
                        @register.SubmitionDate.ToShortDateString()
                    </span>
                    <span id="register-price" value="@register.Price">
                        ₡ @Html.DisplayFor(modelItem => register.Price)
                    </span>
                    <span id="register-comment" value="@register.Comment">
                        @Html.DisplayFor(modelItem => register.Comment)
                    </span>
                    <div class="text-center align">
                        <button class="open-interactions-button" data-register-id="@registerKeys" onclick="openInteractionsPopup(this)">
                            <img src="~/img/MoreIcon.svg" alt="Más opciones">
                        </button>
                    </div>
                </a>
            </li>
        }
    </ul>

    <div class="product-pagination">
        <!-- Pagination section -->
        @await Html.PartialAsync("_Pagination")

        <!-- Code for orders registers--> </>
        <div class="interactions-popup">
            <div class="interactions-popup-content">
                <p><b>Fecha:</b> <span id="popup-submitionDate"> </span></p>
                <p><b>Precio:</b> <span id="popup-price"></span></p>
                <p><b>Aporde de:</b> <span id="popup-userName"></span></p>
                <p><b>Comentario:</b> <span id="popup-comment"></span></p>
                <img id="reportIcon" src="~/img/DesactiveReportIcon.svg" alt="Reportar" onclick="toggleReport()" />
                <button class="interactions-close-button" onclick="closeInteractionsPopup()">Cerrar</button>
                <button id="saveButton" onclick="saveInteractions()">Guardar</button>
            </div>
        </div>
    </div>
    <script src="~/js/pagination.js"></script>
</div>