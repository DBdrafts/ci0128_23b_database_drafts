@page "~/ProductPage/{pageIndex:int}"
@model LoCoMPro.Pages.ProductPageModel
@{
    ViewData["Title"] = "Visialización Producto";
    Layout = "_Layout";
    ViewBag.ShowSearchBar = true;
    ViewBag.ShowLogoLink = true;
    @Html.AntiForgeryToken();
}
@using Microsoft.AspNetCore.Identity
@using LoCoMPro.Data;
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

<head>
    <link rel="stylesheet" href="~/css/ProductPage.css" />
    <script src="~/js/interactionsPopUp.js"></script>

    <link rel="stylesheet" href="~/css/RateRegister.css" />
    <script src="~/js/RateRegister.js"></script>

    <link rel="stylesheet" href="~/ico/font-awesome-4.7.0/css/font-awesome.css">
</head>

<div class="product-page">
    <!-- Name of product Search -->
    <div class="titleProduct">
        @Model.SearchProductName
    </div>


    <div id="feedbackMessage" class="feedback-message"></div>
    <!-- Section for columns of specifications from Search product -->
    <div class="product-page-section">
        @{ // select the first matches
            var firstNonNullProduct = Model.Product.FirstOrDefault(r => r.Name != null);
            var firstNonNullStore = Model.Store.FirstOrDefault(r => r.Name != null);
            System.Globalization.CultureInfo culture = new System.Globalization.CultureInfo("es-CR"); // Costa Rica datetime format
        }
        <!-- brand column -->
        <div class="column">
            <h2>Marca</h2>
            @{ // Get the name of the product brand
                if (firstNonNullProduct != null)
                {
                    <p>@firstNonNullProduct.Brand</p>
                }
            }
        </div>

        <!-- model column -->
        <div class="column">
            <h2>Modelo</h2>
            @{ // Get the name of the product model
                if (firstNonNullProduct != null)
                {
                    <p>@firstNonNullProduct.Model</p>
                }
            }
            </div>

        <!-- establishment column -->
        <div class="column">
            <h2>Establecimiento</h2>
            @{ // Get the name of the store
                if (firstNonNullStore != null)
                {
                    <p>@firstNonNullStore.Name</p>
                }
            }
        </div>

        <!-- cantón column -->
        <div class="column">
            <h2>Cantón</h2>
            @{ // Get the name of the Canton Location
                if (firstNonNullStore != null)
                {
                    <p>@firstNonNullStore.CantonName</p>
                }
            }
        </div>

        <!-- province column -->
        <div class="column">
            <h2>Provincia</h2>
            @{ // Get the name of the Province Location
                if (firstNonNullStore != null)
                {
                    <p>@firstNonNullStore.ProvinciaName</p>
                }
            }
        </div>
        <!-- price column -->
        <div class="column">
            <h2>Precio Prom.</h2>
            <p>₡ @Model.AvgPrice.ToString("N0")</p>
        </div>
    </div>
    
    <!-- Horizontal separating line -->
    <hr class="style-four">

    <!-- Code for register list in the page -->
    <!-- Name of product Search -->
    <div class="titleListRegister">
        Lista de registros
    </div>

    <!-- Container for column options -->
   <nav>
        <ul class="containerListRegistercolumns">
            <li>
                <!-- Button to sort by the date -->
                @{ViewBag.SortTipe = "#register-date";}
                @await Html.PartialAsync("_OrderButton", "Fecha")
            </li>
            <li>
                <!-- Button to sort by the price -->
                @{ViewBag.SortTipe = "#register-price";}
                @await Html.PartialAsync("_OrderButton", "Precio")
            </li>
            <li>
                <div class="textComment">Comentarios</div>
            </li>

		</ul>
	</nav>

    <ul class="register-section">
        <!-- Individual registers -->
        @foreach (var register in Model.Registers)
        {
            <!-- Search result section -->
            <!-- Individual registers -->
            char s = (char)31; // ASCII Control Unit Separator
            var user = Model.Users.FirstOrDefault(u => u.Id == register.ContributorId)?.UserName;
            var reviewValue = Model.UserReviews.FirstOrDefault(r => r.ContributorId == register.ContributorId)?.ReviewValue;
            var reportState = 
            var registerKeys = $"{register.SubmitionDate}{s}{register.ContributorId}{s}{register.ProductName}" +
            $"{s}{register.StoreName}{s}{register.Price.ToString("N0")}{s}{register.SubmitionDate.ToString("d", culture)}" +
            $"{s}{user}{s}{register.Comment}{s}{reviewValue}";

            <li class="register-block align register-block-pagination">
                <a>
                    <span id="register-date" value="@register.SubmitionDate.Date">
                        @register.SubmitionDate.ToShortDateString()
                    </span>
                    <span id="register-price" value="@register.Price">
                        ₡ @Html.DisplayFor(modelItem => register.Price)
                    </span>
                    <span id="register-comment" value="@register.Comment">
                        @Html.DisplayFor(modelItem => register.Comment)
                    </span>
                    <div class="text-center align">
                        <button class="open-interactions-button" data-register-id="@registerKeys" onclick="openInteractionsPopup(this)">
                            <img src="~/img/MoreIcon.svg" alt="Más opciones">
                        </button>
                    </div>
                </a>
            </li>
        }
    </ul>

    <!-- Code for interactive pop up -->
    <div class="interactive-popup-section">

        <div class="interactions-popup">
            <div class="interactions-popup-content">
                <p><b>Fecha:</b> <span id="popup-submitionDate"> </span></p>
                <p><b>Precio:</b> <span id="popup-price"></span></p>
                <p><b>Aporde de:</b> <span id="popup-userName"></span></p>
                <p><b>Comentario:</b> <span id="popup-comment"></span></p>

                @if (SignInManager.IsSignedIn(User))
                {
                    <!-- Interactive rating code-->
                    <h5><strong>Valora el registro</strong></h5>
                    @*
                    Note: This code was adapted from the page "codepen.io" to satisfies the needs of the project. All the credit go to this page.
                    The specific link of the page where the code was take from is: https://codepen.io/ashdurham/pen/AVVGvP
                    *@
                    <span class="rating_stars rating_0">
                        <span class='s' data-low='0.5' data-high='1'><i class="fa fa-star-o"></i><i class="fa fa-star-half-o"></i><i class="fa fa-star"></i></span>
                        <span class='s' data-low='1.5' data-high='2'><i class="fa fa-star-o"></i><i class="fa fa-star-half-o"></i><i class="fa fa-star"></i></span>
                        <span class='s' data-low='2.5' data-high='3'><i class="fa fa-star-o"></i><i class="fa fa-star-half-o"></i><i class="fa fa-star"></i></span>
                        <span class='s' data-low='3.5' data-high='4'><i class="fa fa-star-o"></i><i class="fa fa-star-half-o"></i><i class="fa fa-star"></i></span>
                        <span class='s' data-low='4.5' data-high='5'><i class="fa fa-star-o"></i><i class="fa fa-star-half-o"></i><i class="fa fa-star"></i></span>

                        <span class='r r0_5' data-rating='5' data-value='0.5'></span>
                        <span class='r r1' data-rating='10' data-value='1'></span>
                        <span class='r r1_5' data-rating='15' data-value='1.5'></span>
                        <span class='r r2' data-rating='20' data-value='2'></span>
                        <span class='r r2_5' data-rating='25' data-value='2.5'></span>
                        <span class='r r3' data-rating='30' data-value='3'></span>
                        <span class='r r3_5' data-rating='35' data-value='3.5'></span>
                        <span class='r r4' data-rating='40' data-value='4'></span>
                        <span class='r r4_5' data-rating='45' data-value='4.5'></span>
                        <span class='r r5' data-rating='50' data-value='5'></span>
                    </span>

                    <div class="values" hidden>
                        <div>
                            <input type="text" id="rating" value="0" />
                        </div>
                        <div>
                            <input type="text" name="rating" id="rating_val" value="0" />
                        </div>
                    </div>
                }
                <img id="reportIcon" src="~/img/DesactiveReportIcon.svg" alt="Reportar" onclick="toggleReport()" />
                <button class="interactions-close-button" onclick="closeInteractionsPopup()">Cerrar</button>
                @if (SignInManager.IsSignedIn(User))
                {
                    <button id="saveButton" onclick="saveInteractions()">Guardar</button>
                }
            </div>
        </div>
    </div>

    <div class="product-pagination">
        <!-- Pagination section -->
        @await Html.PartialAsync("_Pagination")
    </div>
    <script src="~/js/pagination.js"></script>
</div>