// <auto-generated />
using System;
using LoCoMPro.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LoCoMPro.Migrations
{
    [DbContext(typeof(LoCoMProContext))]
    [Migration("20231001033904_fixed")]
    partial class @fixed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AsociatedWith", b =>
                {
                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CategoryName", "ProductName");

                    b.HasIndex("ProductName");

                    b.ToTable("AsociatedWith");
                });

            modelBuilder.Entity("LoCoMPro.Models.Canton", b =>
                {
                    b.Property<string>("CantonName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProvinciaName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CantonName", "ProvinciaName");

                    b.HasIndex("ProvinciaName");

                    b.ToTable("Canton", (string)null);
                });

            modelBuilder.Entity("LoCoMPro.Models.Category", b =>
                {
                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CategoryName");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("LoCoMPro.Models.Product", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Name");

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("LoCoMPro.Models.Provincia", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Name");

                    b.ToTable("Provincia", (string)null);
                });

            modelBuilder.Entity("LoCoMPro.Models.Register", b =>
                {
                    b.Property<string>("ContributorName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("StoreName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("SubmitionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CantonName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<string>("ProvinciaName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ContributorName", "ProductName", "StoreName", "SubmitionDate");

                    b.HasIndex("ProductName");

                    b.HasIndex("StoreName", "CantonName", "ProvinciaName");

                    b.ToTable("Register", (string)null);
                });

            modelBuilder.Entity("LoCoMPro.Models.Store", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CantonName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProvinciaName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Name", "CantonName", "ProvinciaName");

                    b.HasIndex("CantonName", "ProvinciaName");

                    b.ToTable("Store", (string)null);
                });

            modelBuilder.Entity("LoCoMPro.Models.User", b =>
                {
                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CantonName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProvinciaName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserName");

                    b.HasIndex("CantonName", "ProvinciaName");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("Sells", b =>
                {
                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("StoreName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CantonName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProvinceName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ProductName", "StoreName", "CantonName", "ProvinceName");

                    b.HasIndex("StoreName", "CantonName", "ProvinceName");

                    b.ToTable("Sells");
                });

            modelBuilder.Entity("AsociatedWith", b =>
                {
                    b.HasOne("LoCoMPro.Models.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoryName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoCoMPro.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LoCoMPro.Models.Canton", b =>
                {
                    b.HasOne("LoCoMPro.Models.Provincia", "Provincia")
                        .WithMany("Cantones")
                        .HasForeignKey("ProvinciaName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provincia");
                });

            modelBuilder.Entity("LoCoMPro.Models.Register", b =>
                {
                    b.HasOne("LoCoMPro.Models.User", "Contributor")
                        .WithMany("Registers")
                        .HasForeignKey("ContributorName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoCoMPro.Models.Product", "Product")
                        .WithMany("Registers")
                        .HasForeignKey("ProductName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoCoMPro.Models.Store", "Store")
                        .WithMany("Registers")
                        .HasForeignKey("StoreName", "CantonName", "ProvinciaName");

                    b.Navigation("Contributor");

                    b.Navigation("Product");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("LoCoMPro.Models.Store", b =>
                {
                    b.HasOne("LoCoMPro.Models.Canton", "Location")
                        .WithMany("Stores")
                        .HasForeignKey("CantonName", "ProvinciaName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("LoCoMPro.Models.User", b =>
                {
                    b.HasOne("LoCoMPro.Models.Canton", "Location")
                        .WithMany("Users")
                        .HasForeignKey("CantonName", "ProvinciaName");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("Sells", b =>
                {
                    b.HasOne("LoCoMPro.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoCoMPro.Models.Store", null)
                        .WithMany()
                        .HasForeignKey("StoreName", "CantonName", "ProvinceName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LoCoMPro.Models.Canton", b =>
                {
                    b.Navigation("Stores");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("LoCoMPro.Models.Product", b =>
                {
                    b.Navigation("Registers");
                });

            modelBuilder.Entity("LoCoMPro.Models.Provincia", b =>
                {
                    b.Navigation("Cantones");
                });

            modelBuilder.Entity("LoCoMPro.Models.Store", b =>
                {
                    b.Navigation("Registers");
                });

            modelBuilder.Entity("LoCoMPro.Models.User", b =>
                {
                    b.Navigation("Registers");
                });
#pragma warning restore 612, 618
        }
    }
}
